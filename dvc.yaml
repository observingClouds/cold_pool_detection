stages:
  # classify_tompkins_2001_example:
  #   cmd: python src/tompkins_et_al_2001.py --time "2020-01-10 00:00:00" --output data/examples/tompkins
  #   deps:
  #   - src/tompkins_et_al_2001.py
  #   outs:
  #   - data/examples/tompkins
  #   params:
  #   - tompkins_2001.buoyancy_threshold
  generate_ground_truth_simulation:
    cmd: python src/label/generate_ground_truth_simulation.py --output data/labels
    deps:
    - src/label/generate_ground_truth_simulation.py
    params:
    - ground_truth_simulation.method
    - tompkins_2001.buoyancy_threshold
    - tompkins_2001.avg_length
    outs:
    - data/labels
  generate_tfds:
    cmd: cd data; tar -cvzf labels.tar.gz labels; cd sim_cp_tompkins; tfds build --overwrite
      --download_config '{"download_mode":"force_redownload"}' --noforce_checksums_validation
      --register_checksums
    deps:
    - data/labels
    outs:
    - data/labels.tar.gz
    - data/sim_cp_tompkins/checksums.tsv
  download_NN_weights:
    wdir: models/checkpoints
    cmd:
    - dvc get-url --force "https://www.dropbox.com/s/idenhh7g4j3vapb/checkpoint_densenet121.zip?dl=1"
    - unzip checkpoint_densenet121.zip
    - rm checkpoint_densenet121.zip
    outs:
    - checkpoint_DenseNet121
  train_neural_network:
    cmd: python src/train/train.py
    params:
    - neural_network
    plots:
    - eval/training_nn/plots/predictions/
    - eval/labels/sample_images.png
    - eval/labels/sample_masks.png
    deps:
    - models/checkpoints/checkpoint_DenseNet121
    - data/labels.tar.gz
    outs:
    - models/checkpoints/training_checkpoints
metrics:
- eval/training_nn/metrics.json
plots:
- eval/training_nn/plots/metrics:
    x: step
